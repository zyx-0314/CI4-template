name: Testing

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image-file: ci4-image.tar
      image-tag: my-ci4:test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image (no push, just save)
        run: |
          docker build -t my-ci4:test ./backend -f ./backend/Dockerfile
          docker save my-ci4:test -o ci4-image.tar

      - name: Upload image as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ci4-image
          path: ci4-image.tar

  docker-test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download built image
        uses: actions/download-artifact@v4
        with:
          name: ci4-image
          path: .

      - name: Load Docker image
        run: docker load -i ci4-image.tar

      - name: Start MySQL
        run: docker compose -f compose.yaml -f compose.test.yaml up -d mysql

      - name: Run PHPUnit with coverage
        working-directory: ./backend
        run: |
          mkdir -p build/logs
          docker run --rm \
            --network host \
            -v $PWD:/var/www/html \
            my-ci4:test \
            ./vendor/bin/phpunit --colors=always --testdox \
            --coverage-clover build/logs/clover.xml

      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-clover
          path: backend/build/logs/clover.xml
          if-no-files-found: warn

      - name: Tear down
        if: always()
        run: docker compose -f compose.yaml -f compose.test.yaml down -v
